---


---



<div class="custom-cursor"></div>

<style>

:global(*) {
  cursor: none !important;
}

:global(a),
:global(button),
:global(.button-area),
:global(.theme-title) {
  cursor: none !important;
}



.custom-cursor {
  position: fixed;
  width: 50px;
  height: 50px;
  background-color: white;
  border-radius: 50px;
  filter: blur(0.5rem);
  pointer-events: none;
  mix-blend-mode: difference;
  transform: translate(-50%, -50%);
  transition: transform 0.2s ease-out;
  z-index: 999999999 !important;
  isolation: isolate;
}

/* Aggiunta per garantire che il cursore sia sempre visibile */
@supports (mix-blend-mode: difference) {
  .custom-cursor {
    will-change: transform;
    contain: layout style;
  }
}

@media (max-width: 768px) {
  .custom-cursor {
    display: none;
  }
}

</style>

<script  >
    //  document.addEventListener("astro:page-load", () => {
      const cursor = document.querySelector(".custom-cursor") as HTMLElement;
  const links = document.querySelectorAll("a");
  const buttonAreas = document.querySelectorAll(".button-area");
  const themes = document.querySelectorAll(".theme-title");

  document.addEventListener("mousemove", (e) => {
    if (cursor) {
      cursor.style.left = `${e.clientX}px`;
      cursor.style.top = `${e.clientY}px`;
    }
  });

  // Function to handle cursor scale
  const handleCursorScale = (element: Element, isEntering: boolean) => {
    if (isEntering) {
      cursor.style.transform = "scale(2) translate(-25%, -25%)";
    } else {
      cursor.style.transform = "scale(1) translate(-50%, -50%)";
    }
  };

  // Add event listeners to links
  links.forEach((link) => {
    link.addEventListener("mouseenter", () => handleCursorScale(link, true));
    link.addEventListener("mouseleave", () => handleCursorScale(link, false));
  });

  // Add event listeners to button-areas
  buttonAreas.forEach((buttonArea) => {
    buttonArea.addEventListener("mouseenter", () => handleCursorScale(buttonArea, true));
    buttonArea.addEventListener("mouseleave", () => handleCursorScale(buttonArea, false));
  });

  // Add event listeners to button-areas
  themes.forEach((theme) => {
    theme.addEventListener("mouseenter", () => handleCursorScale(theme, true));
    theme.addEventListener("mouseleave", () => handleCursorScale(theme, false));
  });
  //  });
 
</script>