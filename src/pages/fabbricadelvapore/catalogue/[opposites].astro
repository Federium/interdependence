---

import Contenuto from "../../../layouts/Contenuto.astro";
import Heading from "../../../components/Heading.astro";
import ProjectsLayout from "../../../layouts/ProjectsLayout.astro";
import ProjectCard from "../../../components/ProjectCard.astro";

import { getCollection } from 'astro:content';
import categories from '../../../assets/data/categories.json'; 
import Project from "./[opposites]/[project].astro";

// Funzione per generare i percorsi statici per ogni categoria a partire dallo slug
export async function getStaticPaths() { 
  return categories.map(category => ({
    params: { opposites: category.slug },
    props: { category },
  }));
}

const { opposites } = Astro.params; // prende lo slug dalla URL

const category = categories.find(cat => cat.slug === opposites);

if (!category) {
  throw new Error(`Categoria non trovata per slug: ${opposites}`);
}

// Prendiamo tutti i progetti che appartengono a questa categoria
const projects = await getCollection('projects', (entry) => entry.data.category === category.id);

---

 <Contenuto name="Catalogue">
  <Heading title="Catalogue" subtitle="Fabbrica del Vapore" background={true}>
  </Heading>
  
  <ProjectsLayout category={category} isSingleProject = {false}>


  <div class="projects-container"> 
    {projects.map((project) => (
      <ProjectCard 
        projectId={project.id}
        title={project.data.title}
        folder={opposites}
        slug={project.data.slug}
      />
    ))}
  </div>


  </ProjectsLayout>

  


  <div class="categories-container"> 
    {projects.map((project) => (
      <li>
        <a href={`/fabbricadelvapore/catalogue/${opposites}/${project.id}`}>{project.data.title}</a>
      </li>
    ))}

  </div>
  </div>

</Contenuto>

<style>
  .projects-container {
    display: flex;
  }
</style>