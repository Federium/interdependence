---
import { getCollection } from 'astro:content';
import categories from '../../../../assets/data/categories.json';
import Contenuto from '../../../../layouts/Contenuto.astro';
import Heading from '../../../../components/Heading.astro';
import ProjectsLayout from '../../../../layouts/ProjectsLayout.astro';


// 1. Generiamo correttamente i percorsi con entrambi i parametri
export async function getStaticPaths() {
  const projects = await getCollection('projects');

  return projects.map(project => {
    const categoryInfo = categories.find(cat => cat.id === project.data.category);
    if (!categoryInfo) throw new Error(`Categoria non trovata per ID: ${project.data.category}`);
    
    return {
      params: { 
        opposites: categoryInfo.slug,
        project: project.data.slug 
      },
      props: { project },
    };
  });
}

const { project } = Astro.props;

const { data } = project;

const category = categories.find(cat => cat.id === data.category);
if (!category) {
  throw new Error(`Categoria non trovata per ID: ${data.category}`);
} 


import { Image } from 'astro:assets';
import close from "../../../../assets/icons/close.svg"

const images = await getCollection('images', (entry) => 
  entry.data.category === data.category && entry.data.id === data.id
);


---


<Contenuto name="Catalogue" subsection={true}, subsectionActive={1}>
  <Heading title="Catalogue" subtitle="Fabbrica del Vapore" background={true}>
  </Heading>
  <ProjectsLayout category={category} isSingleProject = {true}>

    <div class="project-container">
      <div class="project-row">
          <div class="col-4" id="nome-progetto">
            <a href="javascript:history.back()" class="close-button">
              <div class="icon">
                <Image src = {close} alt="Close"></Image>
              </div>
              <label>CLOSE</label>
            </a>
            <div class="titolo-sottotitolo-container">
              <h2 class="gradient-text">{data.title}</h2>
              <h3 class="gradient-text light">{data.subtitle}</h3>
            </div>
          
          </div>
            <div class="col-8">
            {images.length > 0 && (
              <div class="img-container">
              {images[0].data.images.map((image) => (
                <Image 
                src={image} 
                alt="foot" 
                height={300}
                />
              ))}
              </div>
            )}
            </div>

      </div>
      <div class="project-row">
        <div class="col-4">
            <div class="info-container">
              <h4>TEAM</h4>
              {data.team && data.team.map((member) => (
                <p class="txt-small">{member}</p>
              ))}
            </div>

            <div class="info-container">
              <h4>CONTEXT</h4>
              <p class="txt-small">{data.degree}</p>
              <p class="txt-small">{data.course}</p>
              <p class="txt-small">{data.ay}</p>

            </div>

            <div class="info-container">
              <h4>PROFESSORS</h4>
              {data.faculty && data.faculty.map((prof) => (
                <p class="txt-small">{prof}</p>
              ))}
            </div>

            <div class="info-container">
              <p class="txt-small">{data.department}</p>
              <p class="txt-small">{data.university}</p>
              <p class="txt-small">{data.city}, {data.state}</p>
            </div>
        </div>
        <div class="col-8" id="descrizione">
            <p class="txt-small">{project.body}</p>
        </div>
      </div>

    </div>

    <!-- <h1>{data.title}</h1>
    <p><strong>Categoria:</strong> {data.category}</p>
    <p><strong>Anno:</strong> {data.ay}</p>
    
    {data.project_website && (
      <p><a href={data.project_website} target="_blank">Sito del progetto</a></p>
    )}

    {data.school_website && (
      <p><a href={data.school_website} target="_blank">Sito della scuola</a></p>
    )}

    <article>
    </article> -->

  </ProjectsLayout>

</Contenuto>


<style>
  h1,p {
    color: black;
  }

  .project-container {
    display: flex;
    width: 100%;
    flex-direction: column;
    flex-wrap: nowrap;
    gap:2em;
  }

  .project-row {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    min-height: 300px;
  }

  #nome-progetto {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    h2 {
      margin-bottom: 0;
      padding-bottom: 0;
    }

    h3 {
      padding-bottom: 0;

    }

    .close-button {
      width: 100%;
      display: flex;
      flex-direction: row;
      flex-wrap: nowrap;
      align-items: center;
      label {
        font-size: 1.2em;
        text-decoration: none;
        transition: all 0.5s ease;
        padding-left: 0.3em;
        padding-left: 0.3em;

      }

      .icon {
        display: flex;
        align-items: center;

        opacity: 30;
        transition: all 0.5s ease;
      }

      &:hover img {
        opacity: 100;
      }

      &:hover label{
        padding-left: 1em;

      }
    }
  }

  .img-container {
    width: 100%;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    overflow-x: scroll;
    gap: 1em;
  }

  .info-container {
    margin-bottom: 1.5em;
    h4 {
      font-size: 1.2em;
      margin-bottom: 0.5em;
    }
    p {
      margin-bottom: 0;
    }
  }


</style>